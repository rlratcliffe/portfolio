#name: Deploy to App Platform (API)
#
#on:
#  push:
#    branches: [main]
#  workflow_dispatch:
#
#env:
#  REGISTRY: ghcr.io
#  IMAGE_NAME: ${{ github.repository }}
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v4
#
#    - name: Log in to GitHub Container Registry
#      uses: docker/login-action@v3
#      with:
#        registry: ghcr.io
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#
#    - name: Build and push Docker image
#      uses: docker/build-push-action@v5
#      with:
#        context: .
#        push: true
#        tags: |
#          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
#          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
#
#    - name: Deploy to App Platform via API
#      run: |
#        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
#          -H "Authorization: Bearer ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" \
#          -H "Content-Type: application/json" \
#          -d '{
#            "spec": {
#              "name": "portfolio",
#              "services": [{
#                "name": "web",
#                "image": {
#                  "registry_type": "GHCR",
#                  "registry": "ghcr.io",
#                  "repository": "${{ github.repository }}",
#                  "tag": "${{ github.sha }}"
#                },
#                "instance_count": 1,
#                "instance_size_slug": "basic-xxs",
#                "http_port": 3000,
#                "health_check": {
#                  "http_path": "/"
#                },
#                "routes": [{
#                  "path": "/"
#                }]
#              }]
#            }
#          }' \
#          "https://api.digitalocean.com/v2/apps/${{ secrets.APP_ID }}/deployments")
#
#        HTTP_CODE=$(echo "$RESPONSE" | tail -1)
#        BODY=$(echo "$RESPONSE" | head -n -1)
#
#        if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
#          echo "Deployment started successfully"
#          echo "$BODY" | jq '.deployment.id'
#        else
#          echo "Deployment failed with HTTP $HTTP_CODE"
#          echo "$BODY"
#          exit 1
#        fi